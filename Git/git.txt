一、基本概念
1、git相对于SVN等传统版本控制系统的优势
git是分布式版本控制系统。相对于集中式版本控制系统不联网就无法工作，分布式版本控制系统在不联网的时候也可以工作，联网只是为了交换提交。另外，git具有极其强大的分支管理功能。git管理的是修改而不是文件。
2、传统的集中式版本控制系统有哪些？
CVS是最早的开源且免费的集中式版本控制系统，偶尔会有提交不完整，版本库莫名损坏的情况。
SVN修正了CVS的一些稳定性的问题，是目前使用最为广泛的集中式版本控制系统。
IBM的ClearCase（以前是Rational公司的，被IBM收购了）是一款收费的集中式版本控制系统，特点是安装比Windows还大，运行比蜗牛还慢。
微软自己也有一个集中式版本控制系统VSS，集成在Visual Studio中。

二、创建版本库
git init 对目录进行git仓库的初始化。
git add 将修改的文件添加到暂存区。
git commit (-m "提交说明") (--amend) 将暂存区的所有内容提交到当前分支(附加提交说明)(追加提交)


四、版本回退
1、HEAD的含义
HEAD表示当前版本，HEAD^表示上1个版本，HEAD^^表示往上2个版本，HEAD~100往上100个版本。
2、常用命令
git log (--pretty=online) (-1) 查看提交日志(精简版)(只查看最近一条提交记录)
git reset --hard HEAD^ 回退到上一个版本
git reset --hard [commit_id] 回退到指定版本
git reflog 记录每一次命令

五、git仓的组成
一个git仓由工作区和版本库（Repository）组成。版本库中包含了暂存区（stage或index）和分支信息等重要数据。
对工作区的文件作出修改之后，可以使用git add命令将对文件的修改（包括对文件的修改，也包括新增或者删除文件）添加到暂存区。可以多次使用git add命令。
使用git commit命令将暂存区的内容提交到当前分支。

六、撤销修改
git checkout . / git checkout -- [file] 将工作区恢复成暂存区的样子。
git checkout HEAD . / git checkout HEAD -- [file] 将工作区和暂存区都恢复成版本库的样子。
git reset HEAD [file] 将暂存区恢复成版本库的样子。
如果修改已经提交到版本库，应该进行版本回退。

七、删除文件
git rm 将文件从工作区和暂存区中删除
git rm -f 将有修改并添加到暂存区的文件从工作区和暂存区中删除
git rm --cached 将文件从暂存区中删除，但是在工作区中保留

